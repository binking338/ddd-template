app.id = ddd-template

apollo.bootstrap.enabled = true
apollo.bootstrap.namespaces = application

spring.application.name=${app.id}

logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.java.sql.PreparedStatement=DEBUG
logging.level.org.hibernate.engine.jdbc.batch.internal.BatchingBatch=OFF

schedule.event.enabled=true
schedule.saga.enabled=false

# server
server.port=8081
server.tomcat.uri-encoding=UTF-8
server.tomcat.max-threads=400
server.servlet.context-path=/ddd-template
spring.servlet.multipart.max-request-size=50MB
spring.servlet.multipart.max-file-size = 50MB
management.endpoint.shutdown.enabled=true
management.endpoints.web.exposure.include=health,info,prometheus,metrics,service-registry,shutdown
management.metrics.tags.application = ${spring.application.name}
management.health.redis.enabled=false
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.time-zone=GMT+8
spring.jackson.default-property-inclusion=non_null
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false
#spring.mvc.log-request-details=true

# api doc
#springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.disable-swagger-default-url=true

# mysql
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/test?serverTimezone=Hongkong&useSSL=false&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.username=root
spring.datasource.password=
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.druid.initial-size=30
spring.datasource.druid.max-active=100
spring.datasource.druid.min-idle=30
spring.datasource.druid.max-wait=1000
spring.datasource.druid.use-unfair-lock=true
spring.datasource.druid.pool-prepared-statements = false
spring.datasource.druid.validation-query = select 1
spring.datasource.druid.validation-query-timeout = 2
spring.datasource.druid.keep-alive=true
spring.datasource.druid.test-on-borrow = false
spring.datasource.druid.test-on-return = false
spring.datasource.druid.test-while-idle = true
spring.datasource.druid.min-evictable-idle-time-millis = 43200000
spring.datasource.druid.max-evictable-idle-time-millis = 86400000
#spring.datasource.druid.filters=stat,wall
#spring.datasource.druid.connection-properties=druid.stat.mergeSql=true;druid.stat.showSqlMillis=500
#spring.datasource.druid.web-stat-filter.enabled=true
#spring.datasource.druid.web-stat-filter.url-pattern=/*
#spring.datasource.druid.stat-view-servlet.enabled=true
#spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
#spring.datasource.druid.stat-view-servlet.reset-enable=false
#spring.datasource.druid.stat-view-servlet.login-username=admin
#spring.datasource.druid.stat-view-servlet.login-password=123

# jpa
spring.jpa.open-in-view=false
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect.storage_engine=innodb
spring.jpa.properties.hibernate.jdbc.batch_size=5000
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect


## redis
#spring.redis.host = localhost
#spring.redis.port = 6379
#spring.redis.password =
#spring.redis.database = 0
#spring.redis.jedis.pool.max-active = 50
#spring.redis.jedis.pool.max-idle = 10
#spring.redis.jedis.pool.max-wait = -1ms
#spring.redis.jedis.pool.min-idle = 5
#spring.redis.timeout = 5000ms
#spring.cache.redis.key-prefix = ${spring.application.name}:local

## elasticsearch
#spring.elasticsearch.rest.uris = localhost:9200
#spring.elasticsearch.rest.username =
#spring.elasticsearch.rest.password =
#spring.elasticsearch.rest.ssl = true

## rocketmq
#rocketmq.name-server=localhost:9876
#rocketmq.producer.group=${spring.application.name}

## xxljob
#### xxl-job admin address list, such as "http://address" or "http://address01,http://address02"
#xxl.job.admin.addresses=http://127.0.0.1:8080/xxl-job-admin
#### xxl-job, access token
#xxl.job.accessToken=
#### xxl-job executor appname
#xxl.job.executor.appname=${spring.application.name}
#### xxl-job executor registry-address: default spend address to registry , otherwise spend ip:port if address is null
#xxl.job.executor.address=
#### xxl-job executor server-info
#xxl.job.executor.ip=
#xxl.job.executor.port=9999
#### xxl-job executor log-path
#xxl.job.executor.logpath=logs/${app.id}/xxljob-job/jobhandler
#### xxl-job executor log-retention-days
#xxl.job.executor.logretentiondays=30

## eureka
eureka.client.enabled=false
eureka.client.service-url.defaultZone = http://123456@localhost:8761/eureka
eureka.client.registry-fetch-interval-seconds = 2
eureka.instance.appname = ${spring.application.name}
eureka.instance.initial-status= down
eureka.instance.prefer-ip-address = true
#eureka.instance.hostname = ${spring.application.name}
#eureka.instance.non-secure-port = 80
#eureka.instance.virtual-host-name = ${spring.application.name}
#eureka.instance.secure-virtual-host-name = ${spring.application.name}
eureka.instance.lease-renewal-interval-in-seconds=10
eureka.instance.lease-expiration-duration-in-seconds=30
eureka.instance.metadata-map.env=*
eureka.instance.metadata-map.ver=
eureka.instance.metadata-map.prometheus.scrape = true
eureka.instance.metadata-map.prometheus.path = ${server.servlet.context-path}/actuator/prometheus

# feign
feign.okhttp.enabled = true
feign.hystrix.enabled = true
hystrix.shareSecurityContext = true
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds = 3000
hystrix.command.default.circuitBreaker.requestVolumeThreshold = 200
hystrix.command.default.fallback.isolation.semaphore.maxConcurrentRequests = 50
hystrix.threadpool.default.coreSize = 50
ribbon.okhttp.enabled = true
ribbon.ServerListRefreshInterval = 3000
ribbon.ConnectTimeout = 2000
ribbon.ReadTimeout = 20000
ribbon.MaxAutoRetries = 0
ribbon.MaxAutoRetriesNextServer = 0
ribbon.OkToRetryOnAllOperations = false